library("swirl", lib.loc="~/R/win-library/3.2")
detach("package:swirl", unload=TRUE)
library("swirl", lib.loc="~/R/win-library/3.2")
install.packages("manipulate")
detach("package:swirl", unload=TRUE)
library("RCurl", lib.loc="~/R/win-library/3.2")
detach("package:RCurl", unload=TRUE)
detach("package:bitops", unload=TRUE)
library("swirl", lib.loc="~/R/win-library/3.2")
install.package("swirl")
install.packages("swirl")
library(swirl)
swirl()
0
exit()
bye
bye()
9:29
x<-0:6
x
class(x)
as.numeric(x)
class(x)
as.logical(x)
as.character(x)
as.complex(x)
x<-c("a","b","c")
x
as.complex(x)
as.logical(x)
as.character(x)
as.complex(x)
as.logical(x)
as.numeric(x)
as.logical(x)
as.complex(x)
x<-list(1,"a", TRUE,1+4i)
x
m<-matrix(nrow=2, ncol=3)
m
dim(m)
attributes(m)
swirl()
bye(0)
bye()
x<-list(a=list(10, 12, 14), b=c(3.14, 2.81))
x[[c(1,3)]]
x[[1]][[3]]
x[[c(2,1)]]
x[[2]][[1]]
x[[1]][[2]]
x[[c(1,2)]]
x<-matrix(1:6, 2, 3)
x
x[1,]
x[1, drop=FALSE]
x[1, drop=FALSE] [,1][,2][,3]
x
x[1,, drop=FALSE]
x[1,2]
x[1,2,drop=FALSE]
x<-c(1,2,NA,4,NA,5)
y<-c("a","b",NA,"f")
good<-complete.cases(x,y)
y<-c("a","b",NA,"d", NA, "f")
good<-complete.cases(x,y)
x
y
good<-complete.cases(x,y)
good
x[good]
y[good]
y<-c("a","b","c",NA, NA, "f")
good<-complete.cases(x,y)
good
x[good]
y[good]
good<-complete.cases(x)
good
x[good]
good<-complete.cases(y)
y[good]
x<-matrix(1:4, 2, 2); y<-matrix(rep(10,4),2,2)
x
y
rep(10,4)
x*y
x%*%y
?%*%
?*
?%
?(%)
x<-4L
class(x)
x<-c(4,TRUE)
class(x)
x<-list(2, "a", "b", TRUE)
x[[2]]
x<-1:4; y<-2:3
x+y
x <- c(3, 5, 1, 10, 12, 6)
x[x < 6] == 0
x[x <= 5] <- 0
x
install.packages("devtools")
library(devtools)
library(devtools)
fund_rtools
fund_rtools()
find_rtools()
library("stringr", lib.loc="~/R/win-library/3.2")
detach("package:stringr", unload=TRUE)
library("swirl", lib.loc="~/R/win-library/3.2")
detach("package:devtools", unload=TRUE)
install.packages("ggplot2")
?rbinom
?strptime
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
x <- 1:10
if(x > 5) {
x <- 0
}
x
x>5
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
source("cachematrix.R")
source(cachematrix.R)
setwd("~/GitHub/datasciencecoursera/ProgrammingAssignment2")
source("cachematrix.R")
m <- matrix(c(-1, -2, 1, 1), 2,2)
x <- makeCacheMatrix(m)
x$get()
inv <- cacheSolve(x)
inv
inv <- cacheSolve(x)
inv
